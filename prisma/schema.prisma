// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User{
  id String @id @default(cuid())
  userName String @unique
  email String @unique
  password String
  item Item[]
  delete Boolean?
  messages  Message[] @relation("UserMessages")
  room Room[]
  messageRead MessageRead[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([email,userName,id])
}

model Item{
  id String @id @default(cuid())
  userId String 
  user User @relation(fields: [userId], references: [id])
  type Type 
  subType SubType
  productName String
  productImgUrl String[]
  productDescription String
  price Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([id,userId])
}

model Room {
  id        String     @id @default(cuid())
  name      String?    // optional (null for 1-1 chats)
  isGroup   Boolean    @default(false)
  messages  Message[]
  users     User[] 
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([id])
}



model Message {
  id        String   @id @default(cuid())
  content   String
  sender    User     @relation("UserMessages", fields: [senderId], references: [id])
  senderId  String
  chat      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  readBy    MessageRead[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id])
}

model MessageRead {
  id        String   @id @default(cuid())
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  readAt    DateTime @default(now())

  @@unique([messageId, userId])

  @@index([id])
}

enum Type{
  Electronics
  Non_Electronics
}

enum SubType{
  Mobile
  TV
  Laptop
  Fridge
  Bike
  Car
  HotWheel
}